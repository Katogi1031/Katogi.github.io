

upstream web {
    # UNIXドメインソケットを使用する場合
    #erver unix:/tmp/gunicorn_socket/gunicorn_flask.sock fail_timeout=0;

    # TCPソケットを使用
    server web:5000 fail_timeout=0;
}

server {
    charset utf-8;	
    listen     80;
    root /usr/share/nginx/html/;
    server_name  parnas.co.jp;

    location / {
	    index index.html;
	    try_files $uri/index.html =404;
    }

    location /service {
        index service.html;
        try_files $uri/service.html =404;
    
    }
    location /recruit {
        index recruit.html;
        try_files $uri/recruit.html =404;
    
    }
    location /aboutus {
        index aboutus.html;
        try_files $uri/aboutus.html =404;
    }
    location /contact {
        index contact.html;
        try_files $uri/contact.html =404;
    }

   location /en {
	    index en.html;
	    try_files $uri/en/en.html =404;
    }

    location /en/recruit {
        index recruit_en.html;
        try_files $uri/en/recruit_en.html =404;
    
    }
    location /en/aboutus {
        index aboutus_en.html;
        try_files $uri/en/aboutus_en.html =404;
    }
    location /en/contact {
        index contact_en.html;
        try_files $uri/en/contact_en.html =404;
    }

    location /en/works {
        index works_en.html;
        try_files $uri/en/works_en.html =404;
    }

    #static（CSS)フォルダへのパスを設定(これがないとCSS読み込まれない）
    location /static {
            root /usr/share/nginx/html/static;
    }


    if ($request_uri ~ ^.*/index.html$){
    rewrite ^(.*)/index.html$ $1/ permanent;
    }

    location ~* \.(html|css|js|gif|jpeg|png)$ {
        expires 168h;
    }

    client_max_body_size 100M;
    access_log /var/log/nginx/access.log main;

    location /demo {
	    try_files $uri @flask;
        }
    location /delete {
	    try_files $uri @flask;
        }
    location /images {
	    try_files $uri @flask;
        }
    location /results {
	    try_files $uri @flask;
        }

    location @flask {
	    proxy_pass_request_headers on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
            proxy_pass http://web;
        }

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   /usr/share/nginx/html;
    }
}
